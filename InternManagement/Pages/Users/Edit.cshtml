@page
@model InternManagement.Pages.Users.EditModel

@{
    ViewData["Title"] = "Edit";
}


<h4>User</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="User.UserId" />
            <div class="form-group">
                <label asp-for="User.Username" class="control-label"></label>
                <input asp-for="User.Username" class="form-control" />
                <span asp-validation-for="User.Username" class="text-danger"></span>
            </div>         
            <div class="form-group">
                <label asp-for="User.Email" class="control-label"></label>
                <input asp-for="User.Email" class="form-control" />
                <span asp-validation-for="User.Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="User.Password" class="control-label">New Password</label>
                <input asp-for="User.Password" class="form-control" autocomplete="off" value="" />
                <span asp-validation-for="User.Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="User.Role" class="control-label"></label>
                <select asp-for="User.Role" class="form-control">
                    <option value="1">Admin</option>
                    <option value="2">Supervisor</option>
                    <option value="3">Intern</option>
                </select>
                <span asp-validation-for="User.Role" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const form = document.getElementById('changePasswordForm');

        form.addEventListener('submit', function (event) {
            event.preventDefault();

            const formData = new FormData(form);

            fetch(form.action, {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    if (response.ok) {
                        location.reload(true); // reload the page
                    } else {
                        console.error('Form submission failed.');
                    }
                })
                .catch(error => console.error('Fetch error:', error));
        });
    });
</script>